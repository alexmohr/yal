Checks: >
  # enable all checks
  *,
  
  # do not like trailing return
  -modernize-use-trailing-return-type,
  
  # using gcc
  -llvmlibc*,
  
  # not using altera
  -altera*,
  
  # not using fuchsia
  -fuchsia*,
  
  # not using abseil
  -abseil-*,
  
  # arduino types are also specified as i.e. long and not in64
  -google-runtime-int,
  
  # disable so we can have abstract classes
  -cppcoreguidelines-special-member-functions,
  
  # disable so we can have abstract classes
  -hicpp-special-member-functions
  

#    -llvm-include-order,
#    -llvm-header-guard,
#    -cppcoreguidelines-pro-bounds-array-to-pointer-decay,
#    -hicpp-no-array-decay,
#    -system-headers,
#    -readability-identifier-naming,
WarningsAsErrors: '*'
HeaderFilterRegex: '*'
AnalyzeTemporaryDtors: false
FormatStyle: LLVM
CheckOptions:
  - key: cert-dcl16-c.NewSuffixes
    value: 'L;LL;LU;LLU'
  - key: cert-oop54-cpp.WarnOnlyIfThisHasSuspiciousField
    value: '0'
  - key: cppcoreguidelines-explicit-virtual-functions.IgnoreDestructors
    value: '1'
  - key: cppcoreguidelines-non-private-member-variables-in-classes.IgnoreClassesWithAllMemberVariablesBeingPublic
    value: '1'
  - key: google-readability-braces-around-statements.ShortStatementLines
    value: '1'
  - key: google-readability-function-size.StatementThreshold
    value: '800'
  - key: google-readability-namespace-comments.ShortNamespaceLines
    value: '10'
  - key: google-readability-namespace-comments.SpacesBeforeComments
    value: '2'
  - key: modernize-loop-convert.MaxCopySize
    value: '16'
  - key: modernize-loop-convert.MinConfidence
    value: reasonable
  - key: modernize-loop-convert.NamingStyle
    value: CamelCase
  - key: modernize-pass-by-value.IncludeStyle
    value: llvm
  - key: modernize-replace-auto-ptr.IncludeStyle
    value: llvm
  - key: modernize-use-nullptr.NullMacros
    value: 'NULL'
